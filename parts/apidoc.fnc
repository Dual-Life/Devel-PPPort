::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:
:  !!!! Do NOT edit this file directly! -- Edit devel/mkapidoc.sh instead. !!!!
:
:  This file was automatically generated from the API documentation scattered
:  all over the Perl source code. To learn more about how all this works,
:  please read the F<HACKERS> file that came with this distribution.
:
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

:
: This file lists all API functions/macros that are documented in the Perl
: source code, but are not contained in F<embed.fnc>.
:
Amnd||ARCHNAME
Amd|int|AvFILL|AV* av
Amnd|I32|ax
Amxd|void|BhkDISABLE|BHK *hk|which
Amxd|void|BhkENABLE|BHK *hk|which
mxd|void *|BhkENTRY|BHK *hk|which
Amxd|void|BhkENTRY_set|BHK *hk|which|void *ptr
mxd|U32|BhkFLAGS|BHK *hk
Amnd||BIN
AmnUd|const char *|BOM_UTF8
Amd|SV *|boolSV|bool b
Amnd||BYTEORDER
mxd|void|CALL_BLOCK_HOOKS|which|arg
Amnd||CASTFLAGS
Amnd||CHARBITS
Amd|bool|ckWARN|U32 w
Amd|bool|ckWARN2|U32 w1|U32 w2
Amd|bool|ckWARN2_d|U32 w1|U32 w2
Amd|bool|ckWARN3|U32 w1|U32 w2|U32 w3
Amd|bool|ckWARN3_d|U32 w1|U32 w2|U32 w3
Amd|bool|ckWARN4|U32 w1|U32 w2|U32 w3|U32 w4
Amd|bool|ckWARN4_d|U32 w1|U32 w2|U32 w3|U32 w4
Amd|bool|ckWARN_d|U32 w
Amnd|char*|CLASS
Amd|void|CLEAR_ERRSV
Amxd|HV *|cophh_2hv|const COPHH *cophh|U32 flags
Amxd|COPHH *|cophh_copy|COPHH *cophh
Amxd|COPHH *|cophh_delete_pv|const COPHH *cophh|const char *key|U32 hash|U32 flags
Amxd|COPHH *|cophh_delete_pvn|COPHH *cophh|const char *keypv|STRLEN keylen|U32 hash|U32 flags
Amxd|COPHH *|cophh_delete_pvs|const COPHH *cophh|"literal string" key|U32 flags
Amxd|COPHH *|cophh_delete_sv|const COPHH *cophh|SV *key|U32 hash|U32 flags
Amxd|SV *|cophh_fetch_pv|const COPHH *cophh|const char *key|U32 hash|U32 flags
Amxd|SV *|cophh_fetch_pvn|const COPHH *cophh|const char *keypv|STRLEN keylen|U32 hash|U32 flags
Amxd|SV *|cophh_fetch_pvs|const COPHH *cophh|"literal string" key|U32 flags
Amxd|SV *|cophh_fetch_sv|const COPHH *cophh|SV *key|U32 hash|U32 flags
Amxd|void|cophh_free|COPHH *cophh
Amxd|COPHH *|cophh_new_empty
Amxd|COPHH *|cophh_store_pv|const COPHH *cophh|const char *key|U32 hash|SV *value|U32 flags
Amxd|COPHH *|cophh_store_pvn|COPHH *cophh|const char *keypv|STRLEN keylen|U32 hash|SV *value|U32 flags
Amxd|COPHH *|cophh_store_pvs|const COPHH *cophh|"literal string" key|SV *value|U32 flags
Amxd|COPHH *|cophh_store_sv|const COPHH *cophh|SV *key|U32 hash|SV *value|U32 flags
Amd|HV *|cop_hints_2hv|const COP *cop|U32 flags
Amd|SV *|cop_hints_fetch_pv|const COP *cop|const char *key|U32 hash|U32 flags
Amd|SV *|cop_hints_fetch_pvn|const COP *cop|const char *keypv|STRLEN keylen|U32 hash|U32 flags
Amd|SV *|cop_hints_fetch_pvs|const COP *cop|"literal string" key|U32 flags
Amd|SV *|cop_hints_fetch_sv|const COP *cop|SV *key|U32 hash|U32 flags
Amd|void|Copy|void* src|void* dest|int nitems|type
Amd|void *|CopyD|void* src|void* dest|int nitems|type
Amnd||CPPLAST
Amnd||CPPMINUS
Amnd||CPPRUN
Amnd||CPPSTDIN
Amxd|PADLIST *|CvPADLIST|CV *cv
Amd|HV*|CvSTASH|CV* cv
md|bool|CvWEAKOUTSIDE|CV *cv
md|void|CX_CURPAD_SAVE|struct context
md|SV *|CX_CURPAD_SV|struct context|PADOFFSET po
Amnsd||dAX
Amnsd||dAXMARK
Amnd|void|DECLARATION_FOR_LC_NUMERIC_MANIPULATION
Amnsd||dITEMS
msd||djSP
Amnsd||dMARK
Amnsd||dMULTICALL
Amnsd||dORIGMARK
Amnd||DOUBLEINFBYTES
Amnd||DOUBLEKIND
Amnd||DOUBLEMANTBITS
Amnd||DOUBLENANBYTES
Amnd||DOUBLESIZE
Amd|bool|DO_UTF8|SV* sv
mnd|void|dSAVEDERRNO
mnd|void|dSAVE_ERRNO
Amnsd||dSP
Amnsd||dUNDERBAR
Amnsd||dXCPT
Amnsd||dXSARGS
Amnsd||dXSI32
Amnsd||ENTER
Amsd||ENTER_with_name|const char * name
Amnd|SV *|ERRSV
Amd|void|EXTEND|SP|SSize_t nitems
Amnsd||FREETMPS
AmnUd||G_ARRAY
AmnUd||G_DISCARD
AmnUd||G_EVAL
Amnd|U32|GIMME
Amnd|U32|GIMME_V
AmnUd||G_NOARGS
AmnUd||G_SCALAR
Amd|AV*|GvAV|GV* gv
Amd|CV*|GvCV|GV* gv
Amd|HV*|GvHV|GV* gv
AmnUd||G_VOID
Amd|HV*|gv_stashpvs|"literal string" name|I32 create
Amd|SV*|GvSV|GV* gv
AmnUd||HEf_SVKEY
Amd|U32|HeHASH|HE* he
Amd|void*|HeKEY|HE* he
Amd|STRLEN|HeKLEN|HE* he
Amd|char*|HePV|HE* he|STRLEN len
Amd|SV*|HeSVKEY|HE* he
Amd|SV*|HeSVKEY_force|HE* he
Amd|SV*|HeSVKEY_set|HE* he|SV* sv
Amd|U32|HeUTF8|HE* he
Amd|SV*|HeVAL|HE* he
Amd|char*|HvENAME|HV* stash
Amd|STRLEN|HvENAMELEN|HV *stash
Amd|unsigned char|HvENAMEUTF8|HV *stash
Amd|SV**|hv_fetchs|HV* tb|"literal string" key|I32 lval
Amd|char*|HvNAME|HV* stash
Amd|STRLEN|HvNAMELEN|HV *stash
Amd|unsigned char|HvNAMEUTF8|HV *stash
Amd|SV**|hv_stores|HV* tb|"literal string" key|SV* val
Amnd||I16SIZE
Amnd||I16TYPE
Amnd||I32SIZE
Amnd||I32TYPE
Amnd||I8SIZE
Amnd||I8TYPE
Amnd||INTSIZE
Amd|bool|isALPHA|int ch
Amd|bool|isALPHANUMERIC|int ch
Amd|bool|isASCII|int ch
Amd|bool|isBLANK|char ch
Amd|bool|isCNTRL|char ch
Amd|bool|isDIGIT|char ch
Amd|bool|isGRAPH|char ch
Amd|bool|isIDCONT|char ch
Amd|bool|isIDFIRST|char ch
Amd|bool|isLOWER|char ch
Amd|bool|isOCTAL|char ch
Amd|bool|isPRINT|char ch
Amd|bool|isPSXSPC|char ch
Amd|bool|isPUNCT|char ch
Amd|bool|isSPACE|char ch
Amd|bool|isUPPER|char ch
Amd|STRLEN|isUTF8_CHAR_flags|const U8 *s|const U8 *e| const U32 flags
Amd|bool|isWORDCHAR|char ch
Amd|bool|isXDIGIT|char ch
Amnd|I32|items
Amnd||IVdf
Amnd||IVSIZE
Amnd||IVTYPE
Amnd|I32|ix
Amnsd||LEAVE
Amsd||LEAVE_with_name|const char * name
Amxd|void|lex_stuff_pvs|"literal string" pv|U32 flags
Amd|OP*|LINKLIST|OP *o
Amnd||LONGDBLINFBYTES
Amnd||LONGDBLMANTBITS
Amnd||LONGDBLNANBYTES
Amnd||LONGSIZE
Amnd||LSEEKSIZE
mnUd||LVRET
AmnUd||MARK
Amd|bool|memEQ|char* s1|char* s2|STRLEN len
Amd|bool|memNE|char* s1|char* s2|STRLEN len
Amd|void|Move|void* src|void* dest|int nitems|type
Amd|void *|MoveD|void* src|void* dest|int nitems|type
Amd|void|mPUSHi|IV iv
Amd|void|mPUSHn|NV nv
Amd|void|mPUSHp|char* str|STRLEN len
Amd|void|mPUSHs|SV* sv
Amd|void|mPUSHu|UV uv
Amnsd||MULTICALL
Amd|void|mXPUSHi|IV iv
Amd|void|mXPUSHn|NV nv
Amd|void|mXPUSHp|char* str|STRLEN len
Amd|void|mXPUSHs|SV* sv
Amd|void|mXPUSHu|UV uv
ATmDd|int|my_sprintf|NN char *buffer|NN const char *pat|...
Amd|SV*|newRV_inc|SV* sv
Amxd|SV*|newSVpadname|PADNAME *pn
Amd|SV*|newSVpvn_utf8|const char* s|STRLEN len|U32 utf8
Amad|SV*|newSVpvs|"literal string" s
Amad|SV*|newSVpvs_flags|"literal string" s|U32 flags
Amad|SV*|newSVpvs_share|"literal string" s
Amd|void|Newx|void* ptr|int nitems|type
Amd|void|Newxc|void* ptr|int nitems|type|cast
AmUd||newXSproto|char* name|XSUBADDR_t f|char* filename|const char *proto
Amd|void|Newxz|void* ptr|int nitems|type
ADmnUd||Nullav
AmnUd||Nullch
ADmnUd||Nullcv
ADmnUd||Nullhv
AmnUd||Nullsv
Amnd||NVef
Amnd||NVff
Amnd||NVgf
Amnd||NVMANTBITS
Amnd||NVSIZE
Amnd||NVTYPE
Amd|U32|OP_CLASS|OP *o
Amd|const char *|OP_DESC|OP *o
Amd|bool|OpHAS_SIBLING|OP *o
Amd|void|OpLASTSIB_set|OP *o|OP *parent
Amd|void|OpMAYBESIB_set|OP *o|OP *sib|OP *parent
Amd|void|OpMORESIB_set|OP *o|OP *sib
Amd|const char *|OP_NAME|OP *o
Amd|OP*|OpSIBLING|OP *o
Amd|bool|OP_TYPE_IS|OP *o|Optype type
Amd|bool|OP_TYPE_IS_OR_WAS|OP *o|Optype type
AmnUd||ORIGMARK
Amnd||OSNAME
Amnd||OSVERS
Amd|PADOFFSET|pad_add_name_pvs|"literal string" name|U32 flags|HV *typestash|HV *ourstash
Amxd|SV **|PadARRAY|PAD * pad
md|SV *|PAD_BASE_SV	|PADLIST padlist|PADOFFSET po
md|void|PAD_CLONE_VARS|PerlInterpreter *proto_perl|CLONE_PARAMS* param
md|U32|PAD_COMPNAME_FLAGS|PADOFFSET po
md|STRLEN|PAD_COMPNAME_GEN|PADOFFSET po
md|STRLEN|PAD_COMPNAME_GEN_set|PADOFFSET po|int gen
md|HV *|PAD_COMPNAME_OURSTASH|PADOFFSET po
md|char *|PAD_COMPNAME_PV|PADOFFSET po
md|HV *|PAD_COMPNAME_TYPE|PADOFFSET po
Amd|PADOFFSET|pad_findmy_pvs|"literal string" name|U32 flags
Amxd|PAD **|PadlistARRAY|PADLIST * padlist
Amxd|SSize_t|PadlistMAX|PADLIST * padlist
Amxd|PADNAMELIST *|PadlistNAMES|PADLIST * padlist
Amxd|PADNAME **|PadlistNAMESARRAY|PADLIST * padlist
Amxd|SSize_t|PadlistNAMESMAX|PADLIST * padlist
Amxd|U32|PadlistREFCNT|PADLIST * padlist
Amxd|SSize_t|PadMAX|PAD * pad
md|bool|PadnameIsOUR|PADNAME * pn
md|bool|PadnameIsSTATE|PADNAME * pn
Amxd|STRLEN|PadnameLEN|PADNAME * pn
Amxd|PADNAME **|PadnamelistARRAY|PADNAMELIST * pnl
Amxd|SSize_t|PadnamelistMAX|PADNAMELIST * pnl
Amxd|SSize_t|PadnamelistREFCNT|PADNAMELIST * pnl
Amxd|void|PadnamelistREFCNT_dec|PADNAMELIST * pnl
md|HV *|PadnameOURSTASH
md|bool|PadnameOUTER|PADNAME * pn
Amxd|char *|PadnamePV|PADNAME * pn
Amxd|SSize_t|PadnameREFCNT|PADNAME * pn
Amxd|void|PadnameREFCNT_dec|PADNAME * pn
Amxd|SV *|PadnameSV|PADNAME * pn
md|HV *|PadnameTYPE|PADNAME * pn
Amxd|bool|PadnameUTF8|PADNAME * pn
md|void|PAD_RESTORE_LOCAL|PAD *opad
md|void|PAD_SAVE_LOCAL|PAD *opad|PAD *npad
md|void|PAD_SAVE_SETNULLPAD
md|void|PAD_SET_CUR	|PADLIST padlist|I32 n
md|void|PAD_SET_CUR_NOSAVE	|PADLIST padlist|I32 n
md|SV *|PAD_SETSV	|PADOFFSET po|SV* sv
md|SV *|PAD_SV	|PADOFFSET po
md|SV *|PAD_SVl	|PADOFFSET po
Amd|void|PERL_SYS_INIT|int *argc|char*** argv
Amd|void|PERL_SYS_INIT3|int *argc|char*** argv|char*** env
Amd|void|PERL_SYS_TERM|
AmnUd|Perl_check_t *|PL_check
AmnxUd|PAD *|PL_comppad
AmnxUd|PADNAMELIST *|PL_comppad_name
Amnd|COP*|PL_curcop
AmnxUd|SV **|PL_curpad
Amnd|HV*|PL_curstash
mnd|SV *|PL_DBsingle
mnd|GV *|PL_DBsub
mnd|SV *|PL_DBtrace
Amnd|GV *|PL_defgv
mnd|U8|PL_dowarn
Amnd|U8|PL_exit_flags
AmnUxd|Perl_keyword_plugin_t|PL_keyword_plugin
mnd|GV*|PL_last_in_gv
Amnd|HV*|PL_modglobal
Amnd|STRLEN|PL_na
mnd|GV*|PL_ofsgv
Amnd|Perl_ophook_t|PL_opfreehook
AmnUd|yy_parser *|PL_parser
Amnd|yy_parser*|PL_parser
AmnxUNd|char *|PL_parser-E<gt>bufend
AmnxUNd|char *|PL_parser-E<gt>bufptr
AmnxUNd|char *|PL_parser-E<gt>linestart
AmnxUNd|SV *|PL_parser-E<gt>linestr
Amnd|peep_t|PL_peepp
Amnd|signed char|PL_perl_destruct_level
Amnd|peep_t|PL_rpeepp
mnd|SV*|PL_rs
Amnd|runops_proc_t|PL_runops
Amnd|SV|PL_sv_no
Amnd|SV|PL_sv_undef
Amnd|SV|PL_sv_yes
Amnd|SV|PL_sv_zero
Amd|void|Poison|void* dest|int nitems|type
Amd|void|PoisonFree|void* dest|int nitems|type
Amd|void|PoisonNew|void* dest|int nitems|type
Amd|void|PoisonWith|void* dest|int nitems|type|U8 byte
Amnd|IV|POPi
Amnd|long|POPl
Amnsd||POP_MULTICALL
Amnd|NV|POPn
Amnd|char*|POPp
Amnd|char*|POPpbytex
Amnd|char*|POPpx
Amnd|SV*|POPs
Amnd|UV|POPu
Amnd|long|POPul
Amnd||PRIVLIB
Amnd||PTRSIZE
Amd|void|PUSHi|IV iv
Amd|void|PUSHMARK|SP
Amnd|void|PUSHmortal
Amsd||PUSH_MULTICALL|CV* the_cv
Amd|void|PUSHn|NV nv
Amd|void|PUSHp|char* str|STRLEN len
Amd|void|PUSHs|SV* sv
Amd|void|PUSHu|UV uv
Amnsd||PUTBACK
Amnd||RANDBITS
Amd|U8|READ_XDIGIT|char str*
md|SV *|refcounted_he_fetch_pvs|const struct refcounted_he *chain|"literal string" key|U32 flags
md|struct refcounted_he *|refcounted_he_new_pvs|struct refcounted_he *parent|"literal string" key|SV *value|U32 flags
Amd|void|Renew|void* ptr|int nitems|type
Amd|void|Renewc|void* ptr|int nitems|type|cast
AmnUd|const char *|REPLACEMENT_CHARACTER_UTF8
mnd|void|RESTORE_ERRNO
Amd|void|RESTORE_LC_NUMERIC
Amnd|(whatever)|RETVAL
Amd|void|Safefree|void* ptr
Amd|void|SANE_ERRSV
md|void|SAVECLEARSV	|SV **svp
md|void|SAVECOMPPAD
mnd|void|SAVE_ERRNO
md|void|SAVEPADSV	|PADOFFSET po
Amad|char*|savepvs|"literal string" s
Amad|char*|savesharedpvs|"literal string" s
Amnsd||SAVETMPS
md|void|SETERRNO|int errcode|int vmserrcode
Amnd||SHORTSIZE
Amnd||SITELIB
AmnUd||SP
Amnsd||SPAGAIN
Amd|SV*|ST|int ix
Amnd||STARTPERL
Amnd||STDCHAR
Amd|void|STORE_LC_NUMERIC_FORCE_TO_UNDERLYING
Amd|void|STORE_LC_NUMERIC_SET_TO_NEEDED
Amd|void|STORE_LC_NUMERIC_SET_TO_NEEDED_IN|bool in_lc_numeric
Amd|bool|strEQ|char* s1|char* s2
Amd|bool|strGE|char* s1|char* s2
Amd|bool|strGT|char* s1|char* s2
Amd|bool|strLE|char* s1|char* s2
Amd|bool|strLT|char* s1|char* s2
Amd|bool|strNE|char* s1|char* s2
Amd|bool|strnEQ|char* s1|char* s2|STRLEN len
Amd|bool|strnNE|char* s1|char* s2|STRLEN len
Amd|void|StructCopy|type *src|type *dest|type
Amd|void|sv_catpvn_nomg|SV* sv|const char* ptr|STRLEN len
Amd|void|sv_catpv_nomg|SV* sv|const char* ptr
Amd|void|sv_catpvs|SV* sv|"literal string" s
Amd|void|sv_catpvs_flags|SV* sv|"literal string" s|I32 flags
Amd|void|sv_catpvs_mg|SV* sv|"literal string" s
Amd|void|sv_catpvs_nomg|SV* sv|"literal string" s
Amd|void|sv_catsv_nomg|SV* dsv|SV* ssv
Amd|STRLEN|SvCUR|SV* sv
Amd|void|SvCUR_set|SV* sv|STRLEN len
Amd|char*|SvEND|SV* sv
Amd|U32|SvGAMAGIC|SV* sv
Amd|void|SvGETMAGIC|SV* sv
Amd|char *|SvGROW|SV* sv|STRLEN len
Amd|U32|SvIOK|SV* sv
Amd|bool|SvIOK_notUV|SV* sv
Amd|void|SvIOK_off|SV* sv
Amd|void|SvIOK_on|SV* sv
Amd|void|SvIOK_only|SV* sv
Amd|void|SvIOK_only_UV|SV* sv
Amd|U32|SvIOKp|SV* sv
Amd|bool|SvIOK_UV|SV* sv
Amd|U32|SvIsCOW|SV* sv
Amd|bool|SvIsCOW_shared_hash|SV* sv
Amd|IV|SvIV|SV* sv
Amd|IV|SvIV_nomg|SV* sv
Amd|void|SvIV_set|SV* sv|IV val
Amd|IV|SvIVX|SV* sv
Amd|IV|SvIVx|SV* sv
Amd|STRLEN|SvLEN|SV* sv
Amd|void|SvLEN_set|SV* sv|STRLEN len
Amd|void|SvLOCK|SV* sv
Amd|void|SvMAGIC_set|SV* sv|MAGIC* val
Amd|U32|SvNIOK|SV* sv
Amd|void|SvNIOK_off|SV* sv
Amd|U32|SvNIOKp|SV* sv
Amd|U32|SvNOK|SV* sv
Amd|void|SvNOK_off|SV* sv
Amd|void|SvNOK_on|SV* sv
Amd|void|SvNOK_only|SV* sv
Amd|U32|SvNOKp|SV* sv
Amd|NV|SvNV|SV* sv
Amd|NV|SvNV_nomg|SV* sv
Amd|void|SvNV_set|SV* sv|NV val
Amd|NV|SvNVX|SV* sv
Amd|NV|SvNVx|SV* sv
Amd|U32|SvOK|SV* sv
Amd|U32|SvOOK|SV* sv
Amd|void|SvOOK_offset|SV*sv|STRLEN len
Amd|U32|SvPOK|SV* sv
Amd|void|SvPOK_off|SV* sv
Amd|void|SvPOK_on|SV* sv
Amd|void|SvPOK_only|SV* sv
Amd|void|SvPOK_only_UTF8|SV* sv
Amd|U32|SvPOKp|SV* sv
Amd|char*|SvPV|SV* sv|STRLEN len
Amd|char*|SvPVbyte|SV* sv|STRLEN len
Amd|char*|SvPVbyte_force|SV* sv|STRLEN len
Amd|char*|SvPVbyte_nolen|SV* sv
Amd|char*|SvPVbytex|SV* sv|STRLEN len
Amd|char*|SvPVbytex_force|SV* sv|STRLEN len
Amd|char *|SvPVCLEAR|SV* sv
Amd|char*|SvPV_force|SV* sv|STRLEN len
Amd|char*|SvPV_force_nomg|SV* sv|STRLEN len
Amd|char*|SvPV_nolen|SV* sv
Amd|char*|SvPV_nomg|SV* sv|STRLEN len
Amd|char*|SvPV_nomg_nolen|SV* sv
Amd|void|SvPV_set|SV* sv|char* val
Amd|char*|SvPVutf8|SV* sv|STRLEN len
Amd|char*|SvPVutf8_force|SV* sv|STRLEN len
Amd|char*|SvPVutf8_nolen|SV* sv
Amd|char*|SvPVutf8x|SV* sv|STRLEN len
Amd|char*|SvPVutf8x_force|SV* sv|STRLEN len
Amd|char*|SvPVX|SV* sv
Amd|char*|SvPVx|SV* sv|STRLEN len
Amd|U32|SvREADONLY|SV* sv
Amd|U32|SvREADONLY_off|SV* sv
Amd|U32|SvREADONLY_on|SV* sv
Amd|U32|SvREFCNT|SV* sv
Amd|void|SvREFCNT_dec|SV* sv
Amd|void|SvREFCNT_dec_NN|SV* sv
Amd|SV*|SvREFCNT_inc|SV* sv
Amd|SV*|SvREFCNT_inc_NN|SV* sv
Amd|SV*|SvREFCNT_inc_simple|SV* sv
Amd|SV*|SvREFCNT_inc_simple_NN|SV* sv
Amd|void|SvREFCNT_inc_simple_void|SV* sv
Amd|void|SvREFCNT_inc_simple_void_NN|SV* sv
Amd|void|SvREFCNT_inc_void|SV* sv
Amd|void|SvREFCNT_inc_void_NN|SV* sv
Amd|U32|SvROK|SV* sv
Amd|void|SvROK_off|SV* sv
Amd|void|SvROK_on|SV* sv
Amd|SV*|SvRV|SV* sv
Amd|void|SvRV_set|SV* sv|SV* val
Amd|REGEXP *|SvRX|SV *sv
Amd|bool|SvRXOK|SV* sv
Amd|void|SvSETMAGIC|SV* sv
Amd|void|SvSetMagicSV|SV* dsv|SV* ssv
Amd|void|SvSetMagicSV_nosteal|SV* dsv|SV* ssv
Amd|void|sv_setpvs|SV* sv|"literal string" s
Amd|void|sv_setpvs_mg|SV* sv|"literal string" s
Amd|SV *|sv_setref_pvs|SV *const rv|const char *const classname|"literal string" s
Amd|void|SvSetSV|SV* dsv|SV* ssv
Amd|void|sv_setsv_nomg|SV* dsv|SV* ssv
Amd|void|SvSetSV_nosteal|SV* dsv|SV* ssv
Amd|void|SvSHARE|SV* sv
Amd|HV*|SvSTASH|SV* sv
Amd|void|SvSTASH_set|SV* sv|HV* val
Amd|void|SvTAINT|SV* sv
Amd|bool|SvTAINTED|SV* sv
Amd|void|SvTAINTED_off|SV* sv
Amd|void|SvTAINTED_on|SV* sv
md|U32|SvTHINKFIRST|SV *sv
AmnUd||SVt_INVLIST
AmnUd||SVt_IV
AmnUd||SVt_NULL
AmnUd||SVt_NV
AmnUd||SVt_PV
AmnUd||SVt_PVAV
AmnUd||SVt_PVCV
AmnUd||SVt_PVFM
AmnUd||SVt_PVGV
AmnUd||SVt_PVHV
AmnUd||SVt_PVIO
AmnUd||SVt_PVIV
AmnUd||SVt_PVLV
AmnUd||SVt_PVMG
AmnUd||SVt_PVNV
AmnUd||SVt_REGEXP
Amd|bool|SvTRUE|SV* sv
Amd|bool|SvTRUE_nomg|SV* sv
Amd|bool|SvTRUEx|SV* sv
Amd|svtype|SvTYPE|SV* sv
AmnUd||svtype
Amd|void|SvUNLOCK|SV* sv
Amd|bool|SvUOK|SV* sv
Amd|void|SvUPGRADE|SV* sv|svtype type
Amd|U32|SvUTF8|SV* sv
Amd|void|SvUTF8_off|SV *sv
Amd|void|SvUTF8_on|SV *sv
Amd|UV|SvUV|SV* sv
Amd|UV|SvUV_nomg|SV* sv
Amd|void|SvUV_set|SV* sv|UV val
Amd|UV|SvUVX|SV* sv
Amd|UV|SvUVx|SV* sv
Amd|bool|SvVOK|SV* sv
Amnd|(whatever)|THIS
Amd|U8|toFOLD|U8 ch
Amd|UV|toFOLD_utf8|U8* p|U8* s|STRLEN* lenp
Amd|UV|toFOLD_utf8_safe|U8* p|U8* e|U8* s|STRLEN* lenp
Amd|UV|toFOLD_uvchr|UV cp|U8* s|STRLEN* lenp
Amd|U8|toLOWER|U8 ch
Amd|U8|toLOWER_L1|U8 ch
Amd|U8|toLOWER_LC|U8 ch
Amd|UV|toLOWER_utf8|U8* p|U8* s|STRLEN* lenp
Amd|UV|toLOWER_utf8_safe|U8* p|U8* e|U8* s|STRLEN* lenp
Amd|UV|toLOWER_uvchr|UV cp|U8* s|STRLEN* lenp
Amd|U8|toTITLE|U8 ch
Amd|UV|toTITLE_utf8|U8* p|U8* s|STRLEN* lenp
Amd|UV|toTITLE_utf8_safe|U8* p|U8* e|U8* s|STRLEN* lenp
Amd|UV|toTITLE_uvchr|UV cp|U8* s|STRLEN* lenp
Amd|U8|toUPPER|int ch
Amd|UV|toUPPER_utf8|U8* p|U8* s|STRLEN* lenp
Amd|UV|toUPPER_utf8_safe|U8* p|U8* e|U8* s|STRLEN* lenp
Amd|UV|toUPPER_uvchr|UV cp|U8* s|STRLEN* lenp
Amnd||U16SIZE
Amnd||U16TYPE
Amnd||U32SIZE
Amnd||U32TYPE
Amnd||U8SIZE
Amnd||U8TYPE
AmnUd||UNDERBAR
Amd|bool|UTF8_IS_INVARIANT|char c
Amd|bool|UTF8_IS_NONCHAR|const U8 *s|const U8 *e
Amd|bool|UTF8_IS_SUPER|const U8 *s|const U8 *e
Amd|bool|UTF8_IS_SURROGATE|const U8 *s|const U8 *e
Amd|STRLEN|UTF8_SAFE_SKIP|char* s|char* e
Amd|STRLEN|UTF8SKIP|char* s
Amd|bool|UVCHR_IS_INVARIANT|UV cp
Amd|STRLEN|UVCHR_SKIP|UV cp
Amnd||UVof
Amnd||UVSIZE
Amnd||UVTYPE
Amnd||UVuf
Amnd||UVXf
Amnd||UVxf
Amd|void|WITH_LC_NUMERIC_SET_TO_NEEDED
Amd|void|WITH_LC_NUMERIC_SET_TO_NEEDED_IN|bool in_lc_numeric
AmnUd||XCPT_CATCH
Amnsd||XCPT_RETHROW
AmnUd||XCPT_TRY_END
AmnUd||XCPT_TRY_START
Amd|void|XopDISABLE|XOP *xop|which
Amd|void|XopENABLE|XOP *xop|which
Amd||XopENTRY|XOP *xop|which
Amd||XopENTRYCUSTOM|const OP *o|which
Amd|void|XopENTRY_set|XOP *xop|which|value
Amd|U32|XopFLAGS|XOP *xop
Amd|void|XPUSHi|IV iv
Amnd|void|XPUSHmortal
Amd|void|XPUSHn|NV nv
Amd|void|XPUSHp|char* str|STRLEN len
Amd|void|XPUSHs|SV* sv
Amd|void|XPUSHu|UV uv
AmnUd||XS
Amnsd||XS_APIVERSION_BOOTCHECK
AmnUd||XS_EXTERNAL
AmUd||XS_INTERNAL
Amd|void|XSRETURN|int nitems
Amnsd||XSRETURN_EMPTY
Amd|void|XSRETURN_IV|IV iv
Amnsd||XSRETURN_NO
Amd|void|XSRETURN_NV|NV nv
Amd|void|XSRETURN_PV|char* str
Amnsd||XSRETURN_UNDEF
Amd|void|XSRETURN_UV|IV uv
Amnsd||XSRETURN_YES
Amd|void|XST_mIV|int pos|IV iv
Amd|void|XST_mNO|int pos
Amd|void|XST_mNV|int pos|NV nv
Amd|void|XST_mPV|int pos|char* str
Amd|void|XST_mUNDEF|int pos
Amd|void|XST_mYES|int pos
AmnUd||XS_VERSION
Amnsd||XS_VERSION_BOOTCHECK
Amd|void|Zero|void* dest|int nitems|type
Amd|void *|ZeroD|void* dest|int nitems|type
